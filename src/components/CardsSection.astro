---
import Card from "./Card.astro"
import Section from "./Section.astro"
import { cards } from "../scripts/tools"

const myCards = cards
---

<Section
	id='card-section'
	sectionTitle='Experiencia'
	fullWidth='true'
	classes='sm:px-8 md:px-16 lg:px-32'
>
	<div
		id='cards-container'
		class='grid gap-3 pl-4 sm:pl-0 grid-flow-col overflow-x-scroll sm:grid-cols-2 md:grid-cols-3 sm:grid-flow-row sm:overflow-visible sm:pb-2'
	>
		{
			myCards.map((card) => (
				<Card
					description={card.description}
					fromColor={card.fromColor}
					icon={card.icon}
					image={card.image}
					tag={card.tag}
					title={card.title}
					toColor={card.toColor}
					url={card.url}
				/>
			))
		}
	</div>
</Section>

<style>
	@keyframes hide {
		from {
			transform: scale(1);
		}
		to {
			transform: scale(1.4);
		}
	}

	#card-section {
		animation: hide linear;
		animation-timeline: scroll(vertical, root);
		animation-duration: auto;
	}
</style>

<script>
	const cards = document.querySelectorAll(".card")
	const height = cards[0].clientHeight
	const width = cards[0].clientWidth

	cards.forEach((card) => {
		if (card instanceof HTMLAnchorElement) {
			card.addEventListener("mousemove", (event) => {
				// mouse coordinates
				const { layerX, layerY } = event

				// calculus
				const yRotation = ((layerX - width / 2) / width) * 3
				const xRotation = ((layerY - height / 2) / height) * 3

				// transformations
				const string = `
          perspective(500px)
          rotateX(${xRotation}deg)
          rotateY(${-yRotation}deg)
        `

				card.style.transform = string
			})

			card.addEventListener("mouseout", () => {
				card.style.transform = `
          perspective(1200px)
          rotateX(0)
          rotateY(0)
        `
			})
		}
	})
</script>
